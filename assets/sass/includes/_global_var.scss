//-------------------------------------------------------global_vars

$pi: 3.14159265359;
$square_root_of_2: 1.41421356237;

//-------------------------------------------------------global_vars
//-------------------------------------------------------mixins

@mixin style_separator($var: false, $var2: false, $var3: false, $var4: false, $var5: false, $var6: false, $var7: false, $var8: false, $var9: false) {
	@if $var == $local_var or $var2 == $local_var or $var3 == $local_var or $var4 == $local_var or $var5 == $local_var or $var6 == $local_var or $var7 == $local_var or $var8 == $local_var or $var9 == $local_var {
		@content;
	}
}

@mixin sub_style_separator($var: false, $var2: false, $var3: false, $var4: false, $var5: false, $var6: false, $var7: false, $var8: false, $var9: false) {
	@if $var == $local_var or $var2 == $local_var or $var3 == $local_var or $var4 == $local_var or $var5 == $local_var or $var6 == $local_var or $var7 == $local_var or $var8 == $local_var or $var9 == $local_var {
		@content;
	}
}

@mixin ie_9_check {
	@if $ie9 == true {
		@content;
	}
}

@mixin pseudo($width,$height,$content:'') {
	position: absolute;
	content:'content';
	width:$width*1rem;
	height:$height*1rem;
}

@mixin font_face($font_name,$file_name,$path:$font_path,$weight:normal,$style:normal) {
	@font-face {
		font-family:quote($font_name);
		src: url($path + $file-name + '.eot');
		src: url($path + $file-name + '.eot?#iefix') format('embedded-opentype'),
		url($path + $file-name + '.woff') format('woff'),
		url($path + $file-name + '.ttf') format('truetype'),
		url($path + $file-name + '.svg##{$font_name}') format('svg');
		font-weight: $weight;
		font-style: $style;
	}
}

@mixin triangle($side,$color,$size) {
  position:relative;
  &:before {
    content:" ";
    position:absolute;
    @if $side == left {
      top:50%;
      transform:translate(0,-50%);
      right:100%;
      border:$size+px solid transparent;
      border-right:$size+px solid $color;
    }
    @if $side == right {
      top:50%;
      transform:translate(0,-50%);
      left:100%;
      border:$size+px solid transparent;
      border-left:$size+px solid $color;
    }
    @if $side == top {
      bottom:100%;
      transform:translate(-50%,0);
      left:50%;
      border:$size+px solid transparent;
      border-bottom:$size+px solid $color;
    }
    @if $side == bottom {
      top:100%;
      transform:translate(-50%,0);
      left:50%;
      border:$size+px solid transparent;
      border-top:$size+px solid $color;
    }
  }
}

@mixin holyday_separator($var: false) {
	@if $var == $holydat_var {
		@content;
	}
}

@mixin doc_check {
	@if $doc == true {
		@content;
	}
}

@mixin develop_check {
	@if $develop == true {
		@content;
	}
}

@mixin production_check {
	@if $production == true {
		@content;
	}
}

@mixin ie_7_check {
	@if $ie7 == true {
		@content;
	}
}

@mixin no_ie_7_check {
	@if $ie7 == false {
		@content;
	}
}

@mixin ie_8_check {
	@if $ie8 == true {
		@content;
	}
}

@mixin ie_7_8_check {
	@if $ie7 == true {
		@content;
	}
	@if $ie8 == true {
		@content;
	}
}



@mixin ie_8_9_check {
	@if $ie8 == true {
		@content;
	}
	@if $ie9 == true {
		@content;
	}
}

@mixin all_check {
	@if $all == true {
		@content;
	}
}

@mixin all_ie9_check {
	@if $all == true {
		@content;
	}
	@if $ie9 == true {
		@content;
	}
}

@mixin no-flexboxlegacy(){
	.no-flexboxlegacy &{
		@content;
	}
}

@mixin print_style() {
	@media print {
		@content;
	}
}

@mixin appearance($value: button) {
	-moz-appearance: $value;
	-webkit-appearance: $value;
	appearance: $value;
}

@mixin flexbox() {
	display: -webkit-box;
	display: -moz-box;
	display: -ms-flexbox;
	display: -webkit-flex;
	display: flex;
}

@mixin inline_flexbox() {
	display: -webkit-inline-box;
	display: -moz-inline-box;
	display: -ms-inline-flex;
	display: -webkit-inline-flex;
	display: inline-flex;
}

@mixin flex($values) {
	-webkit-box-flex: $values;
	-moz-box-flex: $values;
	-webkit-flex: $values;
	-ms-flex: $values;
	flex: $values;
}

@mixin flex_block($flex-direction : row, $flex-wrap: wrap, $content : space-between, $align-items : flex-start,$align-content : flex-start) {

	display: -webkit-box;
	display: -moz-box;
	display: -ms-flexbox;
	display: -webkit-flex;
	display: flex;
	-webkit-box-direction: normal;
	-moz-box-direction: normal;

	@if $flex-direction == 'row' {
		-webkit-box-orient: horizontal;
		-moz-box-orient: horizontal;
	} @else if $flex-direction == 'column' {
		-webkit-box-orient: vertical;
		-moz-box-orient: vertical;
	}

	-webkit-flex-direction: $flex-direction;
	-ms-flex-direction: $flex-direction;
	flex-direction: $flex-direction;
	-webkit-flex-wrap: $flex-wrap;
	-ms-flex-wrap: $flex-wrap;
	flex-wrap: $flex-wrap;

	@if $content == 'space-between' {
		-webkit-box-pack: justify;
		-moz-box-pack: justify;
	} @else if $content == 'flex-start' {
		-webkit-box-pack : start;
		-moz-box-pack: start;
	} @else if $content == 'flex-end' {
		-webkit-box-pack : end;
		-moz-box-pack: end;
	} @else if $content == 'center' {
		-webkit-box-pack : center;
		-moz-box-pack: center;
	}

	-webkit-justify-content: $content;

	@if $content == 'space-between' {
		-ms-flex-pack: justify;
	} @else if $content == 'flex-start' {
		-ms-flex-pack: start;
	} @else if $content == 'flex-end' {
		-ms-flex-pack: end;
	} @else if $content == 'center' {
		-ms-flex-pack: center;
	}

	justify-content: $content;



	-webkit-align-content: $align-content;
	@if $align-content == 'stretch' {
		-ms-flex-line-pack: stretch;
	} @else if $align-content == 'space-around' {
		-ms-flex-line-pack: distribute;
	} @else if $align-content == 'space-between' {
		-ms-flex-line-pack: justify;
	} @else if $align-content == 'flex-start' {
		-ms-flex-line-pack: start;
	} @else if $align-content == 'flex-end' {
		-ms-flex-line-pack: end;
	} @else if $align-content == 'center' {
		-ms-flex-line-pack: center;
	}

	align-content: $align-content;

	@if $align-content == 'stretch' {
		-webkit-box-align: stretch;
	} @else if $align-content == 'flex-start' {
		-webkit-box-align: start;
	} @else if $align-content == 'flex-end' {
		-webkit-box-align: end;
	} @else if $align-content == 'center' {
		-webkit-box-align: center;
	}

	-webkit-align-items: $align-items;
	@if $align-content == 'stretch' {
		-ms-flex-align: stretch;
	} @else if $align-content == 'flex-start' {
		-ms-flex-align: start;
	} @else if $align-content == 'flex-end' {
		-ms-flex-align: end;
	} @else if $align-content == 'center' {
		-ms-flex-align: center;
	}
	align-items: $align-items;
}

@mixin align-self($val: center){
	-webkit-align-self:$val;
	align-self:$val;
}

@mixin clearfix {
	&:after {
		content: "";
		display: block;
		height: 0;
		clear: both;
		visibility: hidden;
	}
}

@mixin user-select-none {
	-webkit-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
	user-select: none;
}

@mixin inline_block_wrapper {
	font-size: 0;
	line-height: 0;
	letter-spacing: -1px;
}

@mixin inline_block_element($font-size: 15px, $line-height: 1.4, $letter-spacing: normal) {
	display: inline-block;
	font-size: $font-size;
	line-height: $line-height;
	letter-spacing: $letter-spacing;
	@if $ie7 == true {
		display: inline;
	}
}
// Color  Function
@function color($group, $shade:normal, $transparency:1){
	@each $color in $color-stack{
		$c-group: map-get($color, group);
		$c-shade: map-get($color, id);
		@if($group == map-get($color, group) and $shade == map-get($color, id)){
			@return rgba(map-get($color, color), $transparency);
		}
	}
}
@import "_project_vars";
@import "_extends";
@import "_project_extends";
@import "_buttons_extends";
