include _global_vars

mixin head(array)
	meta(charset='UTF-8')
	title!=array.title_inner
	meta(name="viewport", content="width=device-width")
	if production
		meta(name="SKYPE_TOOLBAR", content="SKYPE_TOOLBAR_PARSER_COMPATIBLE")
		meta(name="apple-mobile-web-app-capable", content="yes")
		meta(name="format-detection", content="telephone=no")
		link(type="image/x-icon", rel="shortcut icon", href="favicon.ico")
		link(rel="shortcut icon", href="favicon.ico", type="image/x-icon")
		link(rel="apple-touch-icon", href="apple-touch-icon.png")
		link(rel="apple-touch-icon", sizes="57x57", href="apple-touch-icon-57x57.png")
		link(rel="apple-touch-icon", sizes="72x72", href="apple-touch-icon-72x72.png")
		link(rel="apple-touch-icon", sizes="76x76", href="apple-touch-icon-76x76.png")
		link(rel="apple-touch-icon", sizes="114x114", href="apple-touch-icon-114x114.png")
		link(rel="apple-touch-icon", sizes="120x120", href="apple-touch-icon-120x120.png")
		link(rel="apple-touch-icon", sizes="144x144", href="apple-touch-icon-144x144.png")
		link(rel="apple-touch-icon", sizes="152x152", href="apple-touch-icon-152x152.png")
	+load_font_script
	+load_fonts
	link(rel="stylesheet" media="all" href="styles/main_global.css")

mixin scripts
	if jQuery
		<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
		<script>window.jQuery || document.write('<script src="js/jquery-1.11.1.min.js"><\/script>')</script>
	if jQueryUI
		<script src="//ajax.googleapis.com/ajax/libs/jqueryui/1.10.4/jquery-ui.min.js"></script>
		<script>window.jQuery.ui || document.write('<script src="js/jquery-ui.min.js"><\/script>')</script>
	script(src="js/all.js")
	script(src='js/main.js')

mixin lb_rb_check_radio(type,title,name, block_class_mod, class_mod, checked_mod, input_class_mod )
	if checked_mod == undefined
		- var checked_mod = false
	if input_class_mod == undefined
		- var input_class_mod = block_class_mod
	label.lbl_rb_ch_block(class='#{block_class_mod}')
		if checked_mod
			input.lbl_inp_rb_ch(name='#{name}', type='#{type}', class='#{input_class_mod}', checked='checked')
		else
			input.lbl_inp_rb_ch(name='#{name}', type='#{type}', class='#{input_class_mod}')
		span.lbl_rb_ch_text(class='#{class_mod}') #{title}

mixin lb_rb_check_radio_new(config)
	- config.class_mod = config.class_mod || config.block_class_mod
	- config.input_class_mod = config.input_class_mod || config.block_class_mod
	label.lbl_rb_ch_block(class=config.block_class_mod)
		if config.checked
			input.lbl_inp_rb_ch(name=config.name type=config.type class=config.input_class_mod checked='checked')
		else
			input.lbl_inp_rb_ch(name=config.name type=config.type class=config.input_class_mod)
		span.lbl_rb_ch_text(class=config.class_mod) #{config.title}

mixin form_field_new(config)
	if config.id == false
		- config.id = config.title.replace(/\s/g, '_').replace(/[.,:;(){}/?!@#$%&*]/g, '')
	else
		- config.id = config.id.replace(/\s/g, '_').replace(/[.,:;(){}/?!@#$%&*]/g, '')
	if config.placeholder === undefined
		- config.placeholder = config.title
	- config.value = config.value || ''
	- config.array.field_class = config.array.field_class || ''
	- config.array.field_type = config.array.field_type || 'text'
	- config.add_class = config.add_class || ''
	dl.form_cell(class='#{config.array.block_class_mod}')
		dt.form_c_hline(class='#{config.array.class_mod}')
			label(for='#{config.id}') #{config.title}
		dd.form_c_f_w(class='#{config.array.class_mod}')
			if config.icon_class
				span.input_icon(class="#{config.icon_class}")
			if config.link_class
				a(href="#" class="#{config.link_class}") #{config.link_text}
			if config.array.field_type === 'file'
				input.f_c_field(type='file' id='#{config.id}', class='#{config.array.field_class}' placeholder='#{config.placeholder}')
				span.f_c_field_file_field
					span.f_c_field_file_text #{config.title}
					span.f_c_field_file_butt Choose File
			else if config.array.field_type === 'textarea'
				textarea.f_c_field(id='#{config.id}' type='#{config.array.field_type}' class='#{config.array.field_class}' placeholder='#{config.placeholder}')
			else
				input.f_c_field(value=config.value type='#{config.array.field_type}' id='#{config.id}', class='#{config.array.field_class} #{config.add_class}' placeholder='#{config.placeholder}')
			block

mixin form_field(title, field_id, array, placeholder_text,icon_class)
	if field_id == false
		- field_id = title.replace(/\s/g, '_').replace(/[.,:;(){}/?!@#$%&*]/g, '')
	else
		- field_id = field_id.replace(/\s/g, '_').replace(/[.,:;(){}/?!@#$%&*]/g, '')
	if array.field_class == undefined
		- array.field_class = ''
	if array.field_type === undefined
		- array.field_type = 'text'
	dl.form_cell(class='#{array.block_class_mod}')
		dt.form_c_hline(class='#{array.class_mod}')
			label(for='#{field_id}') #{title}
		dd.form_c_f_w(class='#{array.class_mod}')
			if icon_class
				span.input_icon(class="#{icon_class}")
			if array.link_class
				a(href="#" class="#{array.link_class}") #{array.link_text}
			if array.field_type === 'file'
				input.f_c_field(type='file' id='#{field_id}', class='#{array.field_class} #{array.clear_butt != undefined ? "clear_butt_mod" : ""}', placeholder='#{placeholder_text != undefined ? placeholder_text : title}')
				span.f_c_field_file_field
					span.f_c_field_file_text #{title}
					span.f_c_field_file_butt Choose File
			else if array.field_type === 'textarea'
				textarea.f_c_field(id='#{field_id}', class='#{array.field_class} #{array.clear_butt != undefined ? "clear_butt_mod" : ""}', placeholder='#{placeholder_text != undefined ? placeholder_text : title}')
			else
				input.f_c_field(type='#{array.field_type}' id='#{field_id}', class='#{array.field_class} #{array.clear_butt != undefined ? "clear_butt_mod" : ""}', placeholder='#{placeholder_text != undefined ? placeholder_text : title}')

mixin form_field_select(title, select_text, placeholder, field_id, block_class_mod, class_mod, select_class)
	dl.form_cell(class='#{block_class_mod}')
		dt.form_c_hline(class='#{class_mod}')
			label(for='#{field_id}') #{title}
		dd.form_c_f_w(class='#{class_mod}')
			if placeholder != 'false'
				select.f_c_field(id='#{field_id}' class='#{select_class}', data-placeholder="#{placeholder}")
					each val in select_text.name
						option(value='#{val}')= val
			else
				select.f_c_field(id='#{field_id}' class='#{select_class}')
					each val in select_text.name
						option(value='#{val}')= val

mixin form_field_select_new(config)
	- config.placeholder = config.placeholder || ''
	dl.form_cell(class=config.block_class_mod)
		dt.form_c_hline(class=config.class_mod)
			label(for=config.id) #{config.title}
		dd.form_c_f_w(class=config.class_mod)
			select.f_c_field(id=config.id class=config.select_class data-placeholder=config.placeholder)
				each option in config.options
					option(value=option)= option

mixin form_element(config)
	//- default values
	- config.class_array = config.class_array || {}
	- config.class_array.block_class_mod = config.class_array.block_class_mod || ''
	- config.class_array.class_mod = config.class_array.class_mod || ''
	- config.class_array.elem_class = config.class_array.elem_class || ''
	- config.add_class = config.add_class || ''
	- config.placeholder = config.placeholder || ''
	if !config.id
		- config.id = config.title.replace(/\s/g, '_').replace(/[.,:;(){}/?!@#$%&*]/g, '')
	else
		- config.id = config.id.replace(/\s/g, '_').replace(/[.,:;(){}/?!@#$%&*]/g, '')
	if config.type === 'text' || config.type === 'password' || config.type === 'email' || config.type === 'textarea' || config.type === 'select' || config.type === 'file'
		dl.form_cell(class=config.class_array.block_class_mod)
			dt.form_c_hline(class=config.class_array.class_mod)
				label(for=config.id) #{config.title}
			dd.form_c_f_w(class=config.class_array.class_mod)
				if config.type === 'text' || config.type === 'password' || config.type === 'email'
					if config.value
						input.f_c_field(value=config.value type=config.type id=config.id class='#{config.class_array.elem_class} #{config.add_class}' placeholder=config.placeholder)
						block
					else
						input.f_c_field(type=config.type id=config.id class='#{config.class_array.elem_class} #{config.add_class}' placeholder=config.placeholder)
						block
				if config.type === 'textarea'
					textarea.f_c_field(type=config.type id=config.id class='#{config.class_array.elem_class} #{config.add_class}' placeholder=config.placeholder) #{config.value}
					block
				if config.type === 'file'
					input.f_c_field(type=config.type id=config.id class='#{config.class_array.elem_class} #{config.add_class}' placeholder=config.placeholder)
					.f_c_field_file_field
						span.f_c_field_file_text #{config.title}
						span.f_c_field_file_butt Choose File
				if config.type === 'select'
					select.f_c_field(id=config.id class='#{config.class_array.elem_class} #{config.add_class}' data-placeholder=config.placeholder)
						each option in config.options
							option(value=option)= option
					block
	if config.type === 'checkbox' || config.type === 'radio'
		label.lbl_rb_ch_block(class=config.class_array.block_class_mod)
			if config.checked
				input.lbl_inp_rb_ch(name=config.name type=config.type class='#{config.class_array.elem_class} #{config.add_class}' checked='checked')
			else
				input.lbl_inp_rb_ch(name=config.name type=config.type class='#{config.class_array.elem_class} #{config.add_class}')
			span.lbl_rb_ch_text(class=config.class_mod) #{config.title}

mixin loop_while(counter)
	- i=0;
	while i < counter
		-i++;
		block

mixin breadcrumbs(page_title,array,mod)
	nav(class="breadcrumbs_wrap #{mod}" itemprop="breadcrumb" itemscope itemtype="http://schema.org/BreadcrumbList")
		meta(itemprop="name" content="Breadcrumb")
		meta(itemprop="description" content="Breadcrumb for #{page_title}")
		ul.breadcrumbs_list(class="#{mod}" itemprop="itemListElement")
			each crumb, index in array
				li.breadcrumbs_l_item(class="#{mod}" itemscope itemtype="http://data-vocabulary.org/Breadcrumb")
					- if (index == array.length - 1)
						span.breadcrumbs_text(class="#{mod}" itemprop="title")=crumb.text
					- else
						a.breadcrumbs_link(class="#{mod}" href="#" title=crumb.text itemprop="url")
							span.breadcrumbs_text(class="#{mod}" itemprop="title")=crumb.text

mixin main_menu(menuArray)
	ul.main_menu_list(class="#{menuArray.mod}")
		each item in menuArray.items
			if item.active
				li.main_menu_item.active_mod(class="#{menuArray.mod}")
					a.main_menu_link(href="#" class="#{menuArray.mod}") #{item.title}
			else
				li.main_menu_item(class="#{menuArray.mod}")
					a.main_menu_link(href="#" class="#{menuArray.mod}") #{item.title}

mixin social(items,mod)
	ul.social_list(class="#{mod}")
		each item in items
			li.social_item(class="#{mod}")
				a.social_link(href="#" class="#{item}_mod #{mod}") #{item}

mixin load_font_script
	script function loadFont(a,b,c,d){function e(){if(!window.FontFace)return!1;var a=new FontFace("t",'url("data:application/font-woff2,") format("woff2")',{}),b=a.load();try{b.then(null,function(){})}catch(c){}return"loading"===a.status}var f=navigator.userAgent,g=!window.addEventListener||f.match(/(Android (2|3|4.0|4.1|4.2|4.3))|(Opera (Mini|Mobi))/)&&!f.match(/Chrome/);if(!g){var h={};try{h=localStorage||{}}catch(i){}var j="x-font-"+a,k=j+"url",l=j+"css",m=h[k],n=h[l],o=document.createElement("style");if(o.rel="stylesheet",document.head.appendChild(o),!n||m!==b&&m!==c){var p=c&&e()?c:b,q=new XMLHttpRequest;q.open("GET",p),q.onload=function(){q.status>=200&&q.status<400&&(h[k]=p,h[l]=q.responseText,d||(o.textContent=q.responseText))},q.send()}else o.textContent=n}}

mixin load_fonts
	script loadFont('amaranthregular', 'fonts/amaranthregular.woff.css');loadFont('AmericanTextC', 'fonts/AmericanTextC.woff.css');

